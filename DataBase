using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GameConsoles1
{
    internal class Program
    {
        static void Main()
        {
            bool isWork = true;
            List<Player> players = new List<Player>();
            DataBase dataBase = new DataBase(players);

            while (isWork)
            {
                dataBase.DisplayInformation();
                Console.WriteLine("Меню:\n1 - Добивить игрока\n2 - Забанить игрока\n3 - Разбанить икрока\n4 - удалить игрока");
                string userInput = Console.ReadLine();
                switch (userInput)
                {
                    case "1":
                        Console.Clear();
                        dataBase.AddPlayer();
                    break;
                        
                    case "2":
                        Console.Clear();
                        dataBase.BanPlayer();
                    break;
                        
                    case "3":
                        Console.Clear();
                        dataBase.UnBanPlayer();
                    break;
                        
                    case "4":
                        Console.Clear();
                        dataBase.DeletePlayer();
                    break;
                }
            }
        }
    }

    
    class DataBase
    {
        private  List<Player> _players;
        public DataBase(List<Player> users)
        {
            _players = users;
        }

        public void AddPlayer()
        {
            Console.WriteLine("Введите имя игрока");
             string name = Console.ReadLine();
            _players.Add(new Player(name));
            Console.Clear();
        }

        public void BanPlayer()
        {
            Console.WriteLine("Введите порядковый номер игрока");
            string  numberUser = Console.ReadLine();
            int userId;
            if (int.TryParse(numberUser,out userId))
            {
                for (int i = 0; i < _players.Count; i++)
                {
                    if (i + 1 == userId)
                    {
                        _players[i].ActivateBlocking();
                    }
                }
            }   
        }

        public void UnBanPlayer()
        {
            Console.WriteLine("Введите порядковый номер игрока");
            string numberUser = Console.ReadLine();
            int userId;
            if (int.TryParse(numberUser, out userId))
            {
                for (int i = 0; i < _players.Count; i++)
                {
                    if (i + 1 == userId)
                    {
                        _players[i].RemoveBlocking();
                    }
                }
            }
        }

        public void DeletePlayer()
        {
            Console.WriteLine("Введите порядковый номер игрока");
            string numberUser = Console.ReadLine();
            int userId;
            if (int.TryParse(numberUser, out userId))
            {
                for (int i = 0; i < _players.Count; i++)
                {
                    if (i + 1   == userId)
                    {
                        _players.RemoveAt(i);
                    }
                    
                }
            }
        }

        public void DisplayInformation()
        {
            for (int i = 0; i < _players.Count; i++)
            {
                Console.Write($"{i + 1} - ");
                _players[i].Info();
            }
        }
    }

    class Player
    {
        private int _maxLevel;
        private int _minLevel;
        private string _name;
        private int _level;
        private bool _playerBan;

        public Player( string name, bool playerBan = false)
        {
            Random random = new Random();
            _minLevel = 1;
            _maxLevel = 11;
            _name = name;
            _level = random.Next(_minLevel, _maxLevel); 
            _playerBan = playerBan;
        }

        public void ActivateBlocking()
        {
            _playerBan = true;
        }

        public void RemoveBlocking()
        {
            _playerBan = false;
        }
        public void Info()
        {
            Console.WriteLine($"Имя игрока = {_name},Уровень игрока = {_level}, Игрок заблокирован = { _playerBan}");
        }     
    }
}

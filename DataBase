using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GameConsoles1
{
    internal class Program
    {
        static void Main()
        {
            DataBase dataBase = new DataBase();
            dataBase.AddPlayer(0, "Admin", 0);
            bool isWork = true;

            while (isWork)
            {
                dataBase.ShowInfo();
                Console.WriteLine("Добро пожаловать в БД игроков");
                Console.WriteLine("\nМеню:\n1 - Добавить в БД\n2 - Удалить игрока\n3 - Забанить игрока\n4 - Разбанить игрока\n9 - выход");
                string userInput = Console.ReadLine();
                switch (userInput) 
                {
                    case "1":
                        Console.Clear();
                        int idPlayer = 0;
                        idPlayer++;
                        Console.WriteLine("Введите имя игрока");
                        string namePlayer = Console.ReadLine();
                        Console.WriteLine("Какой уровень у игрока");
                        int levelPleuer = Convert.ToInt32(Console.ReadLine());
                        dataBase.AddPlayer(idPlayer,namePlayer,levelPleuer);
                        break;

                    case"2":
                        Console.WriteLine("Введите ID игрока");
                        int daletIdPlyert = Convert.ToInt32(Console.ReadLine());
                        dataBase.DeletPlayer(daletIdPlyert);
                        break;

                   case"3":
                        Console.WriteLine("Введите ID игрока на бан");
                        int baneIdPlayer = Convert.ToInt32(Console.ReadLine());
                        dataBase.BanePlayer(baneIdPlayer);
                        break;

                   case"4":
                        Console.WriteLine("Введите ID игрока на Разблакировку");
                        int unBanIdPlayer = Convert.ToInt32(Console.ReadLine());
                        dataBase.UnbanPlayer(unBanIdPlayer);
                        break;

                    case "9":
                        isWork = false;
                        break;
                }
            }
        }
    }


    class DataBase
    {
        private List<int> _id = new List<int>();
        private List<string> _name = new List<string>();
        private List<int> _level = new List<int>();
        private List<bool> _flag = new List<bool>();

        public void AddPlayer(int id, string name, int level, bool flag = true)
        {
            _id.Add(id);
            _name.Add(name);
            _level.Add(level);
            _flag.Add(flag);
        }

        public void BanePlayer(int idPlayer)
        {
            for (int i = 0; i < _id.Count; i++)
            {
                if (_id[i] == idPlayer)
                {
                    _flag[i] = false;
                    Console.Clear();
                    Console.WriteLine("Игрок Заблокирован");
                }
            }
        }

        public void UnbanPlayer(int idPlayer)
        {
            for (int i = 0; i < _id.Count; i++)
            {
                if (_id[i] == idPlayer)
                {
                    _flag[i] = true;
                    Console.Clear();
                    Console.WriteLine("Разблакирован");
                } 
            }
        }

        public void DeletPlayer(int idPlayer)
        {
            for (int i = 0; i < _id.Count; i++)
            {
                if (_id[i] == idPlayer)
                {
                    _id.RemoveAt(i);
                    _name.RemoveAt(i);
                    _level.RemoveAt(i);
                    _flag.RemoveAt(i);
                    Console.Clear();
                    Console.WriteLine("Удалено");
                }
            }
        }

        public void ShowInfo()
        {
            for (int i = 0; i < _id.Count; i++)
            {
                Console.WriteLine($" ID Игрока = {_id[i]} Имя игрока:{_name[i]}, Уровень игрока:{_level[i]},Статус игрока:{_flag[i]}");
            }
        }
    }
}

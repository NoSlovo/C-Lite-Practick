using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace GameConsoles1
{
    class Program
    {
        static void Main(string[] args)
        {
            bool isWork = true;
            Zoo zoo = new Zoo();
            zoo.AddAViary();
            zoo.AddAnimalsAviary();

            while (isWork)
            {
                Console.WriteLine("Добро пожаловать в зоопарк");
                Console.WriteLine("Выберете вольер\n1 - Медведь\n2 - Павлин\n3 - Тигр\n4 - Шемпанзе");
                string userInput = Console.ReadLine();
                if (int.TryParse(userInput,out int userNumber))
                {
                    zoo.DisplayInfoAviary(userNumber);
                }
                else
                {
                    Console.WriteLine("Что-то не так");
                    isWork = false;
                }
            }
        }
    }

    class Zoo 
    {
       private List<Aviary> _aviary = new List<Aviary>();

       public void AddAViary()
       {
            _aviary.Add(new AviaryBrownBear());
            _aviary.Add(new AviaryPeacock());
            _aviary.Add(new AviaryTiger());
            _aviary.Add(new AviaryChimpanzee());
       }

        public void AddAnimalsAviary()
        {
            foreach (var item in _aviary)
            {
                item.AddAnimals();
            }
        }

        public void DisplayInfoAviary(int userNumber)
        {
            if (userNumber <= _aviary.Count)
            {
                for (int i = 0; i < _aviary.Count; i++)
                {
                    if (userNumber - 1 == i)
                    {
                        _aviary[i].DisplayInfo();
                    }
                }
            }
            else
            {
                Console.Clear();
                Console.WriteLine("Такого вальера нет");
            }
            
        }
    }

    abstract class Aviary
    {
        protected int MinAnimals;
        protected int MaxAnimals;
        protected List<Animale> Animals;
        protected string TypeAviary;
        protected int CountAnimal;

        public abstract void DisplayInfo();
        public abstract void AddAnimals();
    }

   abstract class Animale
   {
        protected string Name;
        protected string Gender;
        protected string Vois;

        public abstract void DisplayInfo();
    }

    class AviaryBrownBear : Aviary
    {
        public AviaryBrownBear()
        {
            Random random = new Random();
            MinAnimals = 1;
            MaxAnimals = 10;
            Animals = new List<Animale>();
            TypeAviary = "Вальер";
            CountAnimal = random.Next(MinAnimals, MaxAnimals);
        }

        public override void AddAnimals()
        {
            Animals.Add(new BrownBear());
        }

        public override void DisplayInfo()
        {
            Console.Clear();
            Console.WriteLine($"Тип помещения - {TypeAviary},Количество животных - {CountAnimal}");
            for (int i = 0; i < Animals.Count; i++)
            {
                Animals[i].DisplayInfo();
            }
        }
    }

    class BrownBear:Animale
    {
        public BrownBear()
        {
            Name = "Бурый медведь";
            Gender = "Самец";
            Vois = "Рык,рррр";
        }

        public override void DisplayInfo()
        {
            Console.WriteLine($"Тип Животного - {Name} Пол - {Gender}, Звуки - {Vois}");
        }
    }

    class Peacock : Animale 
    {
        public Peacock()
        {
            Name = "Павлин";
            Gender = "Самка";
            Vois = "Иу";
        }

        public override void DisplayInfo()
        {
            Console.WriteLine($"Тип Животного - {Name} Пол - {Gender}, Звуки - {Vois}");
        }
    }

    class AviaryPeacock : Aviary
    {
        public AviaryPeacock()
        {
            Random random = new Random();
            MinAnimals = 1;
            MaxAnimals = 10;
            Animals = new List<Animale>();
            TypeAviary = "Клетка";
            CountAnimal = random.Next(MinAnimals, MaxAnimals);
        }

        public override void AddAnimals()
        {
            Animals.Add(new Peacock());
        }

        public override void DisplayInfo()
        {
            Console.Clear();
            Console.WriteLine($"Тип помещения - {TypeAviary},Количество животных - {CountAnimal}");
            for (int i = 0; i < Animals.Count; i++)
            {
                Animals[i].DisplayInfo();
            }
        }
    }

    class Tiger : Animale 
    {
        public Tiger()
        {
            Name = "Тигр";
            Gender = "Самец";
            Vois = "Грррр";
        }

        public override void DisplayInfo()
        {
            Console.WriteLine($"Тип Животного - {Name} Пол - {Gender}, Звуки - {Vois}");
        }
    }

    class AviaryTiger : Aviary
    {
        public AviaryTiger()
        {
            Random random = new Random();
            MinAnimals = 1;
            MaxAnimals = 10;
            Animals = new List<Animale>();
            TypeAviary = "Декаративный вальер";
            CountAnimal = random.Next(MinAnimals, MaxAnimals);
        }

        public override void AddAnimals()
        {
            Animals.Add(new Tiger());
        }

        public override void DisplayInfo()
        {
            Console.Clear();
            Console.WriteLine($"Тип помещения - {TypeAviary},Количество животных - {CountAnimal}");
            for (int i = 0; i < Animals.Count; i++)
            {
                Animals[i].DisplayInfo();
            }
        }
    }

   class Chimpanzee : Animale
    {
        public Chimpanzee()
        {
            Name = "Шемпанзе";
            Gender = "Самка";
            Vois = "У,у,у";
        }

        public override void DisplayInfo()
        {
            Console.WriteLine($"Тип Животного - {Name} Пол - {Gender}, Звуки - {Vois}");
        }
    }

    class AviaryChimpanzee : Aviary
    {
        public AviaryChimpanzee()
        {
            Random random = new Random();
            MinAnimals = 1;
            MaxAnimals = 10;
            Animals = new List<Animale>();
            TypeAviary = "Декаративный вальер";
            CountAnimal = random.Next(MinAnimals, MaxAnimals);
        }

        public override void AddAnimals()
        {
            Animals.Add(new Chimpanzee());
        }

        public override void DisplayInfo()
        {
            Console.Clear();
            Console.WriteLine($"Тип помещения - {TypeAviary},Количество животных - {CountAnimal}");
            for (int i = 0; i < Animals.Count; i++)
            {
                Animals[i].DisplayInfo();
            }
        }
    }
}

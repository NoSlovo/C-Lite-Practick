using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GameConsoles1
{
    internal class Program
    {
        static void Main()
        {
            Console.CursorVisible = false;

            char[,] map = {
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#',' ','#',' ','#','#','#','#',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#',' ','#',' ','#','#','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#',' ','#',' ','#','#','#',' ',' ','#','#','#','#','#',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#', },
                {'#','@','#',' ','#','#','#',' ','#','#','#','#',' ','#',' ','#','#','#','#',' ','#','#','#','#','#','#', },
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#','#','#','#',' ','#','#','#','#','#','#', },
                {'#','#',' ','#','#','#','#','#','#','#',' ','#',' ','#',' ',' ',' ',' ','#',' ','#','#','#','#','#','#', },
                {'#',' ',' ',' ','#','#','#',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#',' ','#','#','#','#','#','#', },
                {'#',' ',' ',' ','#','#','#',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#',' ','#','#','#','#','#','#', },
                {'#',' ',' ',' ','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#','#','#','#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#','#',' ','#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#','#',' ','#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#','#',' ','#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#','#',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#','#',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#', },
            };
            DrowMap(map);
            SetPlayerPosition(ref map, out int playerPositionX, out int playerPositionY);
            MovingAroundMap(map,  playerPositionY,  playerPositionX);
        } 

        static void DrowMap(char[,] map)
        {
            for (int i = 0; i < map.GetLength(0);i++)
            {
                for (int j = 0; j < map.GetLength(1);j++)
                {
                    Console.Write(map[i,j]);
                }
                Console.WriteLine();
            }
        }

        static void MovingAroundMap(char[,] map ,  int playerPositionY,  int playerPositionX)
        {
            bool isPlay = true;
            int playerMovementX = 0;
            int playerMovementY = 0;
            while (isPlay)
            {
                MoveMap(map, ref playerPositionY, ref playerPositionX,   playerMovementX,  playerMovementY);

            }
        }

        static void MoveMap( char[,] map, ref int playerPositionY, ref int playerPositionX,  int playerMovementX , int playerMovementY)
        {
            ConsoleKeyInfo key = Console.ReadKey(true);
            switch (key.Key)
            {
                case ConsoleKey.UpArrow:
                    playerMovementX = -1;
                    playerMovementY = 0;
                    break;
                case ConsoleKey.DownArrow:
                    playerMovementX = 1;
                    playerMovementY = 0;
                    break;
                case ConsoleKey.LeftArrow:
                    playerMovementX = 0;
                    playerMovementY = -1;
                    break;
                case ConsoleKey.RightArrow:
                    playerMovementX = 0;
                    playerMovementY = 1;
                    break;

                    if (map[playerPositionX + playerMovementX, playerPositionY + playerMovementY] != '#')
                    {
                        Console.SetCursorPosition(playerPositionY, playerPositionX);
                        Console.Write(" ");

                        playerPositionX += playerMovementX;
                        playerPositionY += playerMovementY;

                        Console.SetCursorPosition(playerPositionY, playerPositionX);
                        Console.Write('@');
                    }
            }
        }

        static void SetPlayerPosition(ref char[,] array, out int playerPositionX, out int playerPositionY)
        {
            playerPositionX = 0;
            playerPositionY = 0;

            for (int i = 0; i < array.GetLength(0); i++)
            {
                for (int j = 0; j < array.GetLength(1); j++)
                {
                    if (array[i, j] == '@')
                    {
                        playerPositionX = i;
                        playerPositionY = j;
                    }
                }    
            }
        }
    }
}

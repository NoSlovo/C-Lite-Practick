using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GameConsoles1
{
    internal class Program
    {
        static void Main()
        {
            Console.CursorVisible = false;
            bool isPlay = true;
            int playerX, playerY;
            
            char[,] map = DrowMap(out playerX, out playerY);
            PleyrControl(ref map, out int playerDX, out int playerDY, ref  playerY, ref  playerX);
            
            
        } 

        static char[,] DrowMap(out int playrX, out int playrY)
        {
             playrY = 0;
             playrX = 0;
            char[,] map = {
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#',' ','#',' ','#','#','#','#',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#',' ','#',' ','#','#','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#',' ','#',' ','#','#','#',' ',' ','#','#','#','#','#',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#', },
                {'#',' ','#',' ','#','#','#',' ','#','#','#','#',' ','#',' ','#','#','#','#',' ','#','#','#','#','#','#', },
                {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#','#','#','#',' ','#','#','#','#','#','#', },
                {'#','#',' ','#','#','#','#','#','#','#',' ','#',' ','#',' ',' ',' ',' ','#',' ','#','#','#','#','#','#', },
                {'#','@',' ',' ','#','#','#',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#',' ','#','#','#','#','#','#', },
                {'#',' ',' ',' ','#','#','#',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#',' ','#','#','#','#','#','#', },
                {'#',' ',' ',' ','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#','#','#','#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#','#',' ','#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#','#',' ','#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#','#',' ','#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#','#',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#','#',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#', },
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#', },
            };

            for (int i = 0; i < map.GetLength(0);i++)
            {
                for (int j = 0; j < map.GetLength(1);j++)
                {
                    Console.Write(map[i,j]);
                    if (map[i,j] == '@')
                    {
                        playrX = i;
                        playrY = j;
                    }
                }
                Console.WriteLine();
            }
            return map;
        }

        static void PleyrControl( ref char[,] map,out int playerDX, out int playerDY, ref int playerY, ref int playerX)
        {
            bool isPlay = true;
            playerDX = 0;
            playerDY = 0;
            while (isPlay)
            {
                if (Console.KeyAvailable)
                {
                    ConsoleKeyInfo key = Console.ReadKey(true);
                    switch (key.Key)
                    {
                        case ConsoleKey.UpArrow:
                            playerDX = -1;
                            playerDY = 0;
                            break;
                        case ConsoleKey.DownArrow:
                            playerDX = 1;
                            playerDY = 0;
                            break;
                        case ConsoleKey.LeftArrow:
                            playerDX = 0;
                            playerDY = -1;
                            break;
                        case ConsoleKey.RightArrow:
                            playerDX = 0;
                            playerDY = 1;
                            break;
                    }
                    if (map[playerX + playerDX, playerY + playerDY] != '#')
                    {
                        Console.SetCursorPosition(playerY, playerX);
                        Console.Write(" ");

                        playerX += playerDX;
                        playerY += playerDY;

                        Console.SetCursorPosition(playerY, playerX);
                        Console.Write('@');
                    }
                }
            }
        }
    }
}

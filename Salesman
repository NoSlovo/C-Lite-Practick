using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GameConsoles1
{
    internal class Program
    {
        static void Main()
        {
            Calliseum calliseum = new Calliseum();
            calliseum.FightGladiators(calliseum.ChooseGladiator(),calliseum.ChooseGladiator());
        }
    }

    class Calliseum
    {
        private List<Gladiator> _gladiators = new List<Gladiator>() { new Gladiator(), new Samurai(), new Paladin(), new Niga(), new Barbarian()};

        public Gladiator ChooseGladiator()
        {
            Console.WriteLine("Выберете гладиатора");
            string userInput = Console.ReadLine();

            if (int.TryParse(userInput,out int userNumber) && userNumber <= _gladiators.Count)
            {
                for (int i = 0; i < _gladiators.Count; i++)
                {
                    if (i + 1 == userNumber)
                    {
                        return _gladiators[i];
                    }
                }
            }
            else
            {
                Console.WriteLine("Что-то не так");
            }
            return null;
        }

        public void FightGladiators(Gladiator gladiator, Gladiator gladiator2)
        {
            if (gladiator != gladiator2)
            {
                gladiator.UseSpell();
                gladiator2.UseSpell();
                while (gladiator.Health > 0 && gladiator2.Health >0)
                {
                    gladiator2.TakeDamege(gladiator.Damage);
                    gladiator.DisplayInfo();
                    gladiator.TakeDamege(gladiator2.Damage);
                    gladiator2.DisplayInfo();
                }

                if (gladiator.Health == 0 && gladiator2.Health == 0)
                {
                    Console.WriteLine("\nНичья\n");
                }
                else if (gladiator.Health > 0 && gladiator2.Health <= 0)
                {
                    DisplayWiner(gladiator);
                }
                else if(gladiator2.Health > 0 &&gladiator.Health <= 0)
                {
                    DisplayWiner(gladiator2);
                }
            }
        }

        public void DisplayWiner(Gladiator gladiator)
        {
            Console.WriteLine($"Победил");
            gladiator.DisplayInfo();
        }
    }

    class Gladiator 
    {
        protected string Name;
        protected int _Health;
        protected int Armor;
        protected int _Damage;

        public int Health => _Health;
        public int Damage => _Damage;
       
        public Gladiator()
        {
            Name = "Гладиатор";
            _Health = 100;
            Armor = 10;
            _Damage = 23;
        }

        public void OpenSecondWind()
        {
            int buffGLadiator = 35;
            _Health += buffGLadiator;
        }

        public void TakeDamege(int damage)
        {
            _Health -= damage;
        }

        public void DisplayInfo()
        {
            Console.WriteLine($"{Name} - {_Health} - {Armor} - {_Damage}");
        }

        public virtual void UseSpell()
        {
            OpenSecondWind();
        }

    }

    class Paladin: Gladiator
    {
        
        public Paladin() 
        {
            Name = "Паладин";
            _Health = 125;
            Armor = 15;
            _Damage = 15;
        }
        
        public void GodsHand()
        {
            int buffPaladin = 10;
            _Damage += buffPaladin;
        }

        public override void UseSpell()
        {
            GodsHand();
        }

    }

    class Niga : Gladiator
    {
        public Niga()
        {
            Name = "Нига";
            _Health = 25;
            Armor = 0;
            _Damage = 15;
        }

        public void TakeAShot()
        {
            int buffNiga = 125;
            _Damage += buffNiga;
        }

        public override void UseSpell()
        {
            TakeAShot();
        }

    }


    class Samurai : Gladiator
    {
        
        public Samurai()
        {
            Name = "Самурай";
            _Health = 150;
            _Damage = 25;
            Armor = 10;
        }

        public void GetKatana()
        {
            int buffSamurai = 35;
            _Damage += buffSamurai;
        }

        public override void UseSpell()
        {
            GetKatana();
        }

    }

    class Barbarian : Gladiator
    {
        
        public Barbarian()
        {
            Name = "Варвар";
            _Damage = 50;
            Armor = 0;
            _Health = 150;
        }

        public void FallFury()
        {
            int buffBarbarian = 10;
            Armor = buffBarbarian;
        }

        public override void UseSpell()
        {
            FallFury();
        }

    }
}
